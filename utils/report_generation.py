import datetime
import numpy as np
import matplotlib.pyplot as plt
import io
from PIL import Image

def generate_report(classification_result, class_probabilities, mri_modality):
    """
    Generate a diagnosis report based on detection results
    
    Parameters:
    -----------
    classification_result : str
        Tumor classification result
    class_probabilities : numpy.ndarray
        Probabilities for each class
    mri_modality : str
        MRI modality used for analysis
        
    Returns:
    --------
    str
        Formatted markdown report
    """
    # Current date and time
    now = datetime.datetime.now()
    date_str = now.strftime("%B %d, %Y")
    time_str = now.strftime("%H:%M:%S")
    
    # Get highest confidence score
    confidence = np.max(class_probabilities) * 100
    
    # Generate clinical insights based on classification
    clinical_insights = get_clinical_insights(classification_result)
    
    # Generate recommendation based on classification
    recommendation = get_recommendation(classification_result, confidence)
    
    # Generate detailed report in markdown format
    report = f"""
    # ðŸ§  Brain Tumor Diagnosis Report

    **Date:** {date_str}  
    **Time:** {time_str}  
    **MRI Modality:** {mri_modality}

    ## Diagnosis Summary

    **Primary Finding:** {classification_result}  
    **Confidence:** {confidence:.1f}%

    ## Detailed Analysis

    ### Tumor Classification
    - **Glioma:** {class_probabilities[0]*100:.1f}%
    - **Meningioma:** {class_probabilities[1]*100:.1f}%
    - **No Tumor:** {class_probabilities[2]*100:.1f}%
    - **Pituitary:** {class_probabilities[3]*100:.1f}%

    ## Clinical Insights
    {clinical_insights}

    ## Recommendations
    {recommendation}

    ---
    *This report was automatically generated by BrainScanAI and should be reviewed by a qualified medical professional. This tool is intended for research and educational purposes only.*
    """
    
    return report

def get_clinical_insights(classification_result):
    """
    Generate clinical insights based on classification result
    
    Parameters:
    -----------
    classification_result : str
        Tumor classification result
        
    Returns:
    --------
    str
        Clinical insights in markdown format
    """
    insights = {
        'Glioma': """
        - Gliomas are tumors that arise from glial cells in the brain
        - They are generally classified as low-grade (WHO grade I-II) or high-grade (WHO grade III-IV)
        - Common symptoms include headaches, seizures, cognitive dysfunction, and focal neurological deficits
        - Treatment typically involves surgery, radiation therapy, and/or chemotherapy depending on grade and location
        """,
        
        'Meningioma': """
        - Meningiomas arise from the meninges, the membranes that surround the brain and spinal cord
        - They are typically benign (WHO grade I) but can be atypical (grade II) or malignant (grade III)
        - May cause symptoms due to compression of adjacent brain tissue
        - Treatment options include observation, surgery, and radiation therapy
        """,
        
        'No Tumor': """
        - No evidence of tumor was detected in the MRI scan
        - Consider other potential causes for the patient's symptoms
        - Follow-up imaging may be recommended based on clinical presentation
        """,
        
        'Pituitary': """
        - Pituitary tumors (adenomas) arise from the pituitary gland
        - May be functional (hormone-secreting) or non-functional
        - Can cause symptoms due to hormonal imbalances or compression of surrounding structures
        - Treatment options include medical therapy, surgery, and radiation therapy
        """
    }
    
    return insights.get(classification_result, "Clinical insights not available for this classification.")

def get_recommendation(classification_result, confidence):
    """
    Generate recommendation based on classification result and confidence
    
    Parameters:
    -----------
    classification_result : str
        Tumor classification result
    confidence : float
        Confidence score (0-100)
        
    Returns:
    --------
    str
        Recommendation in markdown format
    """
    # Base recommendations on tumor type and confidence
    if classification_result == 'No Tumor':
        if confidence > 90:
            return """
            - No further imaging studies are necessary at this time unless clinically indicated
            - Consider other potential causes for the patient's symptoms
            - Regular follow-up with primary care provider is recommended
            """
        else:
            return """
            - Consider follow-up imaging in 3-6 months to confirm the absence of tumor
            - Clinical correlation is recommended
            - Consult with a neurologist if symptoms persist
            """
    
    elif classification_result == 'Glioma':
        return """
        - Consult with a neuro-oncologist for comprehensive evaluation
        - Consider advanced imaging (perfusion MRI, spectroscopy) for further characterization
        - Neurosurgical consultation for potential biopsy or resection
        - Consider molecular and genetic testing for treatment planning
        """
    
    elif classification_result == 'Meningioma':
        return """
        - Neurosurgical consultation to evaluate treatment options
        - If asymptomatic and small, consider observation with serial imaging
        - For symptomatic or large tumors, surgical resection is often recommended
        - Follow-up MRI in 3-6 months to assess growth rate if observation is chosen
        """
    
    elif classification_result == 'Pituitary':
        return """
        - Endocrinological evaluation to assess for hormonal abnormalities
        - Visual field testing to evaluate for compression of the optic chiasm
        - Consider dedicated pituitary protocol MRI for better characterization
        - Neurosurgical and/or endocrinological consultation for treatment planning
        """
    
    else:
        return """
        - Further clinical evaluation is recommended
        - Consider additional imaging studies for better characterization
        - Specialist consultation based on clinical presentation
        """

def generate_segmentation_report(seg_metrics, tumor_type, tumor_size):
    """
    Generate report based on segmentation metrics
    
    Parameters:
    -----------
    seg_metrics : dict
        Segmentation metrics (dice, iou, etc.)
    tumor_type : str
        Classified tumor type
    tumor_size : float
        Estimated tumor size in mm^3
        
    Returns:
    --------
    str
        Segmentation report in markdown format
    """
    report = f"""
    ## Tumor Segmentation Analysis

    **Tumor Type:** {tumor_type}
    **Estimated Tumor Volume:** {tumor_size:.2f} mmÂ³

    ### Segmentation Quality Metrics
    - **Dice Coefficient:** {seg_metrics['dice']:.4f}
    - **IoU (Jaccard Index):** {seg_metrics['iou']:.4f}
    - **Segmentation Accuracy:** {seg_metrics['accuracy']:.4f}

    ### Clinical Implications
    {get_size_implications(tumor_type, tumor_size)}
    """
    
    return report

def get_size_implications(tumor_type, tumor_size):
    """
    Generate clinical implications based on tumor type and size
    
    Parameters:
    -----------
    tumor_type : str
        Classified tumor type
    tumor_size : float
        Estimated tumor size in mm^3
        
    Returns:
    --------
    str
        Clinical implications
    """
    # Size thresholds (in mmÂ³) for different tumor types
    thresholds = {
        'Glioma': {
            'small': 5000,
            'medium': 20000,
            'large': 50000
        },
        'Meningioma': {
            'small': 4000,
            'medium': 15000,
            'large': 40000
        },
        'Pituitary': {
            'small': 500,
            'medium': 2000,
            'large': 5000
        }
    }
    
    # Get thresholds for this tumor type
    if tumor_type in thresholds:
        t = thresholds[tumor_type]
    else:
        # Default thresholds
        t = {'small': 5000, 'medium': 20000, 'large': 50000}
    
    # Determine size category
    if tumor_size < t['small']:
        size_category = 'small'
    elif tumor_size < t['medium']:
        size_category = 'medium'
    else:
        size_category = 'large'
    
    # Generate implications based on tumor type and size
    implications = {
        'Glioma': {
            'small': "Small glioma detected. Consider close monitoring with follow-up MRI in 3 months. Surgical intervention may not be necessary immediately depending on location and symptoms.",
            'medium': "Medium-sized glioma detected. Neurosurgical consultation recommended. Consider surgical resection followed by adjuvant therapy based on histological grade.",
            'large': "Large glioma detected. Urgent neurosurgical consultation required. Likely to require aggressive treatment approach including maximal safe resection and adjuvant chemoradiation."
        },
        'Meningioma': {
            'small': "Small meningioma detected. Typically benign with slow growth. Consider observation with follow-up imaging in 6-12 months if asymptomatic.",
            'medium': "Medium-sized meningioma detected. May cause symptoms depending on location. Surgical resection should be considered, especially if symptomatic.",
            'large': "Large meningioma detected. High likelihood of causing mass effect. Neurosurgical consultation recommended for potential resection."
        },
        'Pituitary': {
            'small': "Small pituitary adenoma detected. May be functional or non-functional. Endocrinological workup recommended to assess for hormonal abnormalities.",
            'medium': "Medium-sized pituitary adenoma detected. May cause visual disturbances or hormonal imbalances. Visual field testing and endocrine evaluation recommended.",
            'large': "Large pituitary adenoma detected. High risk of visual pathway compression and pituitary dysfunction. Urgent neurosurgical and endocrinological consultation recommended."
        }
    }
    
    if tumor_type in implications and size_category in implications[tumor_type]:
        return implications[tumor_type][size_category]
    else:
        return "Clinical implications cannot be determined for this tumor type and size."
